apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.novoda.bintray-release'

final def ver = rootProject.ext.versions

android {
    compileSdkVersion ver.compileSdk
    defaultConfig {
        minSdkVersion ver.minSdk
        targetSdkVersion ver.targetSdk
        versionCode ver.libVersionCode
        versionName ver.libVersion

        consumerProguardFiles 'proguard-rules.pro'

        externalNativeBuild {
            ndkBuild {
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86'
                arguments "-j${Runtime.runtime.availableProcessors()}"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
        lintConfig file("lint.xml")
    }

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"

    // AndroidX
    implementation "androidx.appcompat:appcompat:$versions.androidX"

    // Retrofit
    implementation "com.squareup.okhttp3:okhttp:$versions.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"

    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-scalars:$versions.retrofit"

    // GSON
    implementation "com.google.code.gson:gson:$versions.gson"

    // Misc
    implementation "com.github.instacart.truetime-android:library:$versions.trueTime"
    implementation "com.google.android.gms:play-services-location:$versions.location"
    implementation "com.jakewharton.timber:timber:$versions.timber"
    implementation "org.web3j:core:$versions.web3j"

    // Testing
    testImplementation "junit:junit:$versions.oldJunit"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$versions.junit"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$versions.junit"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$versions.junit"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$versions.junit"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "org.mockito:mockito-inline:$versions.mockito"
    testImplementation "com.nhaarman:mockito-kotlin:$versions.mockitoKotlin"
}

repositories {
    mavenCentral()
}

// Publishing to BinTray
final def properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

publish {
    bintrayUser = properties.getProperty("bintray.user")
    bintrayKey = properties.getProperty("bintray.apikey")
    userOrg = 'path'
    groupId = 'network.path.mobilenode'
    artifactId = 'library'
    uploadName = 'path-network-android-sdk'
    repoName='path-network-android-sdk'
    publishVersion = ver.libVersion
    autoPublish = false
    desc = 'Path Network Android fragmework'
    website = 'https://github.com/path-network-token/path-android-sdk'
}
